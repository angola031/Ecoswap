#!/usr/bin/env node

/**
 * Script para probar el restablecimiento de contrase√±a desde el cliente
 * Este script simula lo que hace el navegador
 */

console.log('üß™ Probando restablecimiento de contrase√±a desde el cliente...\n')

// Simular el entorno del navegador
const mockWindow = {
  location: {
    hostname: 'ecoswap-lilac.vercel.app',
    origin: 'https://ecoswap-lilac.vercel.app'
  }
}

// Simular process.env (en el navegador, las variables NEXT_PUBLIC_ est√°n disponibles)
const mockProcess = {
  env: {
    NEXT_PUBLIC_SITE_URL: undefined, // Simular que no est√° configurada
    NODE_ENV: 'production'
  }
}

console.log('üìã Simulando entorno del navegador:')
console.log(`   window.location.hostname: ${mockWindow.location.hostname}`)
console.log(`   window.location.origin: ${mockWindow.location.origin}`)
console.log(`   process.env.NEXT_PUBLIC_SITE_URL: ${mockProcess.env.NEXT_PUBLIC_SITE_URL}`)
console.log(`   NODE_ENV: ${mockProcess.env.NODE_ENV}`)
console.log('')

// Simular la l√≥gica actual del c√≥digo
function simulateClientLogic() {
  // L√≥gica actual del AuthModule.tsx
  const siteUrl = 'https://ecoswap-lilac.vercel.app'
  
  console.log('üîó URL de redirecci√≥n configurada:', `${siteUrl}/auth/callback?next=/auth/reset-password`)
  console.log('üîç Configuraci√≥n Vercel:', {
    siteUrl: siteUrl,
    isVercel: true
  })
  
  return siteUrl
}

const result = simulateClientLogic()

console.log('\nüìä Resultado:')
console.log(`‚úÖ URL final: ${result}`)
console.log(`‚úÖ Es correcta: ${result === 'https://ecoswap-lilac.vercel.app'}`)

if (result === 'https://ecoswap-lilac.vercel.app') {
  console.log('\nüéâ La l√≥gica del cliente es correcta!')
  console.log('üí° El problema podr√≠a ser:')
  console.log('   1. El c√≥digo no se ha desplegado a√∫n en Vercel')
  console.log('   2. Hay cache del navegador')
  console.log('   3. El usuario est√° probando desde localhost')
  console.log('   4. Hay alg√∫n otro lugar en el c√≥digo que est√© enviando localhost')
} else {
  console.log('\n‚ùå La l√≥gica del cliente tiene problemas!')
}

console.log('\nüîç Para verificar en el navegador:')
console.log('1. Ve a https://ecoswap-lilac.vercel.app/login')
console.log('2. Abre DevTools ‚Üí Console')
console.log('3. Haz clic en "¬øOlvidaste tu contrase√±a?"')
console.log('4. Revisa los logs en la consola')
console.log('5. Verifica que muestre:')
console.log('   üîó URL de redirecci√≥n configurada: https://ecoswap-lilac.vercel.app/auth/callback?next=/auth/reset-password')
console.log('   üîç Configuraci√≥n Vercel: { siteUrl: "https://ecoswap-lilac.vercel.app", isVercel: true }')

console.log('\nüö® Si sigue mostrando localhost:')
console.log('1. Verifica que est√©s en https://ecoswap-lilac.vercel.app (no localhost)')
console.log('2. Haz Ctrl+F5 para refrescar sin cache')
console.log('3. Espera 2-3 minutos para que Vercel termine el despliegue')
console.log('4. Revisa si hay otros archivos que puedan estar enviando localhost')

console.log('\nüîß Comandos para verificar:')
console.log('1. Verificar despliegue: git log --oneline -5')
console.log('2. Verificar que no hay localhost: grep -r "localhost" components/')
console.log('3. Verificar variables de entorno en Vercel Dashboard')

