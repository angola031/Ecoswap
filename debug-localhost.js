// Script de diagn√≥stico espec√≠fico para localhost
const { createClient } = require('@supabase/supabase-js')

async function debugLocalhost() {
    console.log('üîç Diagn√≥stico de localhost...')
    
    // Verificar variables de entorno
    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
    const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
    
    console.log('üìã Variables de entorno:')
    console.log('  - NEXT_PUBLIC_SUPABASE_URL:', supabaseUrl ? '‚úÖ Configurada' : '‚ùå Faltante')
    console.log('  - NEXT_PUBLIC_SUPABASE_ANON_KEY:', supabaseKey ? '‚úÖ Configurada' : '‚ùå Faltante')
    console.log('  - NODE_ENV:', process.env.NODE_ENV || 'undefined')
    
    if (!supabaseUrl || !supabaseKey) {
        console.error('‚ùå Variables de entorno faltantes')
        return
    }
    
    // Crear cliente de Supabase
    const supabase = createClient(supabaseUrl, supabaseKey)
    
    try {
        // Probar conexi√≥n b√°sica
        console.log('üîå Probando conexi√≥n a Supabase desde localhost...')
        const { data, error } = await supabase.from('usuario').select('count').limit(1)
        
        if (error) {
            console.error('‚ùå Error de conexi√≥n:', error.message)
            console.error('   C√≥digo:', error.code)
            console.error('   Detalles:', error.details)
        } else {
            console.log('‚úÖ Conexi√≥n exitosa a Supabase desde localhost')
        }
        
        // Probar autenticaci√≥n
        console.log('üîê Probando autenticaci√≥n...')
        const { data: authData, error: authError } = await supabase.auth.signInWithPassword({
            email: 'test@test.com',
            password: 'test123'
        })
        
        if (authError) {
            console.log('‚ö†Ô∏è Error de autenticaci√≥n (esperado):', authError.message)
        } else {
            console.log('‚úÖ Autenticaci√≥n funcionando')
        }
        
    } catch (error) {
        console.error('üí• Error inesperado:', error.message)
    }
}

// Cargar variables de entorno
require('dotenv').config({ path: '.env.local' })
debugLocalhost().catch(console.error)





